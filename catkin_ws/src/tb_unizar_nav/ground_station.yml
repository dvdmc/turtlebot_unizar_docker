<%
# Input parameters
turtlebot_namespace = @settings["turtlebot_namespace"]
mocap_namespace    = @settings["mocap_namespace"]
keyboard_teleop = @settings["keyboard_teleop"] == "true"
rviz            = @settings["rviz"] == "true"
rosbag          = @settings["rosbag"] == "true"
mocap4ros2      = @settings["mocap4ros2"] == "true"
%>

name: ground_station
attach: false
root: ./
windows:

  # Mission monitoring
  - mission_monitoring:
      layout:
      panes:
        - echo Run here the mission

  # Ground station
  - ground_station:
      layout:
      panes:
      <%- if keyboard_teleop %>
        - ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args --remap cmd_vel:=<%= turtlebot_namespace %>/commands/velocity
      <%- end %>
      <%- if rviz %>
        - ros2 run rviz2 rviz2
            -d config/ground_station.rviz
      <%- end %>
      <%- if rosbag %>
        - ./rosbag/record_rosbag.bash <%= turtlebot_namespace %>
      <%- end %>
      <%- if mocap4ros2 %>
        - ros2 launch mocap4r2_optitrack_driver optitrack2.launch.py
            config_file:=config/mocap4r2_optitrack.yaml
        - sleep 1; ros2 lifecycle set /mocap/mocap4r2_optitrack_driver_node activate
        - sleep 2; ros2 run mocap4r2_robot_gt gt_program -p root_frame:=<%= turtlebot_namespace %>/odom
      <%- end %>
  - static_transforms:
      layout:
      panes:
        - ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 <%= turtlebot_namespace %>/base_footprint_gt /map 100
        - ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 /earth /map 100